version: '3.8'

services:
  database:
    image: 'postgres:latest'
    container_name: postgres-db
    networks:
      - analysis-network
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: securepassword
      POSTGRES_DB: sonarqube
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar -d sonarqube"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    mem_limit: 1g

  code-analysis:
    image: 'sonarqube:lts-community'
    container_name: sonarqube
    depends_on:
      database:
        condition: service_healthy
    networks:
      - analysis-network
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://database:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: securepassword
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
      SONAR_WEB_JAVAOPTS: "-Xmx512m -Xms128m"
    volumes:
      - sonar_data:/opt/sonarqube/data
      - sonar_extensions:/opt/sonarqube/extensions
      - sonar_logs:/opt/sonarqube/logs
    restart: unless-stopped
    mem_limit: 2g
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

volumes:
  db_data:
  sonar_data:
  sonar_extensions:
  sonar_logs:

networks:
  analysis-network:
    driver: bridge

